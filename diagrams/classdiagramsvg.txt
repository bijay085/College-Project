<svg viewBox="0 0 1600 1800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .class-box { fill: #f8f9fa; stroke: #2563eb; stroke-width: 2; }
      .class-title { fill: #1e293b; font-family: 'Arial', sans-serif; font-size: 14px; font-weight: bold; }
      .attribute { fill: #475569; font-family: 'Arial', sans-serif; font-size: 11px; }
      .method { fill: #475569; font-family: 'Arial', sans-serif; font-size: 11px; }
      .section-line { stroke: #cbd5e1; stroke-width: 1; }
      .relationship { stroke: #2563eb; stroke-width: 2; fill: none; }
      .arrow { fill: #2563eb; }
      .composition { stroke: #059669; stroke-width: 2; }
      .inheritance { stroke: #dc2626; stroke-width: 2; }
      .section-header { fill: #0f172a; font-family: 'Arial', sans-serif; font-size: 16px; font-weight: bold; }
      .diagram-title { fill: #0f172a; font-family: 'Arial', sans-serif; font-size: 24px; font-weight: bold; }
    </style>
  </defs>

  <!-- Diagram Title -->
  <text x="800" y="24" class="diagram-title" text-anchor="middle">FraudShield Class Diagram</text>

  <!-- Section Headers -->
  <text x="50" y="30" class="section-header">Authentication Layer</text>
  <text x="50" y="450" class="section-header">Fraud Detection Engine</text>
  <text x="50" y="950" class="section-header">Database Layer</text>
  <text x="50" y="1300" class="section-header">API Layer</text>
  <text x="50" y="1600" class="section-header">Frontend Components</text>

  <!-- Authentication Layer -->
  
  <!-- User Class -->
  <rect x="50" y="50" width="280" height="180" class="class-box"/>
  <text x="190" y="70" class="class-title" text-anchor="middle">User</text>
  <line x1="50" y1="80" x2="330" y2="80" class="section-line"/>
  <text x="60" y="100" class="attribute">- _id: String</text>
  <text x="60" y="115" class="attribute">- name: String</text>
  <text x="60" y="130" class="attribute">- email: String</text>
  <text x="60" y="145" class="attribute">- role: String</text>
  <text x="60" y="160" class="attribute">- api_key: String</text>
  <text x="60" y="175" class="attribute">- created_at: DateTime</text>
  <line x1="50" y1="185" x2="330" y2="185" class="section-line"/>
  <text x="60" y="205" class="method">+ validateCredentials(): Boolean</text>
  <text x="60" y="220" class="method">+ generateApiKey(): String</text>

  <!-- AuthManager Class -->
  <rect x="380" y="50" width="300" height="180" class="class-box"/>
  <text x="530" y="70" class="class-title" text-anchor="middle">AuthManager</text>
  <line x1="380" y1="80" x2="680" y2="80" class="section-line"/>
  <text x="390" y="100" class="attribute">- API_BASE_URL: String</text>
  <text x="390" y="115" class="attribute">- MAX_LOGIN_ATTEMPTS: Integer</text>
  <text x="390" y="130" class="attribute">- users: Dict</text>
  <line x1="380" y1="140" x2="680" y2="140" class="section-line"/>
  <text x="390" y="160" class="method">+ restorePersistentSession(): void</text>
  <text x="390" y="175" class="method">+ updateDashboardMetrics(): void</text>
  <text x="390" y="190" class="method">+ animateNumbers(): void</text>
  <text x="390" y="205" class="method">+ addEventListener(): void</text>
  <text x="390" y="220" class="method">+ getCurrentUser(): Object</text>

  <!-- Session Class -->
  <rect x="730" y="50" width="250" height="180" class="class-box"/>
  <text x="855" y="70" class="class-title" text-anchor="middle">Session</text>
  <line x1="730" y1="80" x2="980" y2="80" class="section-line"/>
  <text x="740" y="100" class="attribute">- session_id: String</text>
  <text x="740" y="115" class="attribute">- user_id: String</text>
  <text x="740" y="130" class="attribute">- expires_at: DateTime</text>
  <text x="740" y="145" class="attribute">- login_risk_score: Float</text>
  <line x1="730" y1="155" x2="980" y2="155" class="section-line"/>
  <text x="740" y="175" class="method">+ isValid(): Boolean</text>
  <text x="740" y="190" class="method">+ extend(): void</text>
  <text x="740" y="205" class="method">+ revoke(): void</text>

  <!-- DatabaseManager Class -->
  <rect x="1030" y="50" width="280" height="180" class="class-box"/>
  <text x="1170" y="70" class="class-title" text-anchor="middle">DatabaseManager</text>
  <line x1="1030" y1="80" x2="1310" y2="80" class="section-line"/>
  <text x="1040" y="100" class="attribute">- client: MongoClient</text>
  <text x="1040" y="115" class="attribute">- db: Database</text>
  <text x="1040" y="130" class="attribute">- connected: Boolean</text>
  <line x1="1030" y1="140" x2="1310" y2="140" class="section-line"/>
  <text x="1040" y="160" class="method">+ connect(): Boolean</text>
  <text x="1040" y="175" class="method">+ isConnected(): Boolean</text>
  <text x="1040" y="190" class="method">+ initCollections(): void</text>
  <text x="1040" y="205" class="method">+ getDatabase(): Database</text>

  <!-- Fraud Detection Engine -->
  
  <!-- FraudChecker Class -->
  <rect x="50" y="470" width="350" height="240" class="class-box"/>
  <text x="225" y="490" class="class-title" text-anchor="middle">FraudChecker</text>
  <line x1="50" y1="500" x2="400" y2="500" class="section-line"/>
  <text x="60" y="520" class="attribute">- disposable_domains: Set&lt;String&gt;</text>
  <text x="60" y="535" class="attribute">- flagged_ips: Set&lt;String&gt;</text>
  <text x="60" y="550" class="attribute">- suspicious_bins: Set&lt;String&gt;</text>
  <text x="60" y="565" class="attribute">- rules: Dict</text>
  <text x="60" y="580" class="attribute">- advanced_weights: Dict</text>
  <text x="60" y="595" class="attribute">- transaction_history: Dict</text>
  <text x="60" y="610" class="attribute">- metrics: SyncMetricsTracker</text>
  <line x1="50" y1="620" x2="400" y2="620" class="section-line"/>
  <text x="60" y="640" class="method">+ analyzeTransaction(): FraudResult</text>
  <text x="60" y="655" class="method">+ analyzeBulk(): List&lt;FraudResult&gt;</text>
  <text x="60" y="670" class="method">+ calculateCompositeRiskScore(): Float</text>
  <text x="60" y="685" class="method">+ loadBlacklists(): void</text>
  <text x="60" y="700" class="method">+ loadRules(): void</text>

  <!-- AdvancedAlgorithms Class (Interface) -->
  <rect x="450" y="470" width="320" height="200" class="class-box"/>
  <text x="610" y="490" class="class-title" text-anchor="middle">&lt;&lt;interface&gt;&gt; AdvancedAlgorithms</text>
  <line x1="450" y1="500" x2="770" y2="500" class="section-line"/>
  <text x="460" y="520" class="method">+ analyzeVelocityPatterns(): Tuple</text>
  <text x="460" y="535" class="method">+ analyzeBehavioralPatterns(): Tuple</text>
  <text x="460" y="550" class="method">+ analyzeGeographicAnomalies(): Tuple</text>
  <text x="460" y="565" class="method">+ analyzeNetworkPatterns(): Tuple</text>
  <text x="460" y="580" class="method">+ analyzeEmailPatterns(): Tuple</text>
  <text x="460" y="595" class="method">+ analyzeAmountClustering(): Tuple</text>
  <text x="460" y="610" class="method">+ analyzePhoneCountryMismatch(): Tuple</text>

  <!-- FraudResult Class -->
  <rect x="820" y="470" width="280" height="180" class="class-box"/>
  <text x="960" y="490" class="class-title" text-anchor="middle">FraudResult</text>
  <line x1="820" y1="500" x2="1100" y2="500" class="section-line"/>
  <text x="830" y="520" class="attribute">- fraud_score: Float</text>
  <text x="830" y="535" class="attribute">- base_score: Float</text>
  <text x="830" y="550" class="attribute">- advanced_scores: Dict</text>
  <text x="830" y="565" class="attribute">- decision: String</text>
  <text x="830" y="580" class="attribute">- triggered_rules: List&lt;String&gt;</text>
  <line x1="820" y1="590" x2="1100" y2="590" class="section-line"/>
  <text x="830" y="610" class="method">+ isDanger(): Boolean</text>
  <text x="830" y="625" class="method">+ isSuspicious(): Boolean</text>
  <text x="830" y="640" class="method">+ getExplanation(): String</text>

  <!-- Rule Class -->
  <rect x="1150" y="470" width="280" height="180" class="class-box"/>
  <text x="1290" y="490" class="class-title" text-anchor="middle">Rule</text>
  <line x1="1150" y1="500" x2="1430" y2="500" class="section-line"/>
  <text x="1160" y="520" class="attribute">- _id: String</text>
  <text x="1160" y="535" class="attribute">- rule_key: String</text>
  <text x="1160" y="550" class="attribute">- enabled: Boolean</text>
  <text x="1160" y="565" class="attribute">- weight: Float</text>
  <text x="1160" y="580" class="attribute">- category: String</text>
  <line x1="1150" y1="590" x2="1430" y2="590" class="section-line"/>
  <text x="1160" y="610" class="method">+ isEnabled(): Boolean</text>
  <text x="1160" y="625" class="method">+ updateWeight(): void</text>
  <text x="1160" y="640" class="method">+ toggle(): void</text>

  <!-- Database Layer -->
  
  <!-- MongoManager Class -->
  <rect x="50" y="970" width="280" height="160" class="class-box"/>
  <text x="190" y="990" class="class-title" text-anchor="middle">MongoManager</text>
  <line x1="50" y1="1000" x2="330" y2="1000" class="section-line"/>
  <text x="60" y="1020" class="attribute">- mongo_uri: String</text>
  <text x="60" y="1035" class="attribute">- client: AsyncIOMotorClient</text>
  <text x="60" y="1050" class="attribute">- collections: Dict</text>
  <line x1="50" y1="1060" x2="330" y2="1060" class="section-line"/>
  <text x="60" y="1080" class="method">+ getCollection(): Collection</text>
  <text x="60" y="1095" class="method">+ connect(): void</text>
  <text x="60" y="1110" class="method">+ initCollections(): void</text>

  <!-- SyncMetricsTracker Class -->
  <rect x="380" y="970" width="280" height="160" class="class-box"/>
  <text x="520" y="990" class="class-title" text-anchor="middle">SyncMetricsTracker</text>
  <line x1="380" y1="1000" x2="660" y2="1000" class="section-line"/>
  <text x="390" y="1020" class="attribute">- client: MongoClient</text>
  <text x="390" y="1035" class="attribute">- metrics_collection: Collection</text>
  <line x1="380" y1="1045" x2="660" y2="1045" class="section-line"/>
  <text x="390" y="1065" class="method">+ incrementMetric(): Boolean</text>
  <text x="390" y="1080" class="method">+ getMetricCount(): Integer</text>
  <text x="390" y="1095" class="method">+ initializeMetrics(): Boolean</text>

  <!-- CacheManager Class -->
  <rect x="710" y="970" width="280" height="160" class="class-box"/>
  <text x="850" y="990" class="class-title" text-anchor="middle">CacheManager</text>
  <line x1="710" y1="1000" x2="990" y2="1000" class="section-line"/>
  <text x="720" y="1020" class="attribute">- _cache: Dict</text>
  <text x="720" y="1035" class="attribute">- _timestamps: Dict</text>
  <line x1="710" y1="1045" x2="990" y2="1045" class="section-line"/>
  <text x="720" y="1065" class="method">+ get(): Any</text>
  <text x="720" y="1080" class="method">+ set(): void</text>
  <text x="720" y="1095" class="method">+ clear(): void</text>
  <text x="720" y="1110" class="method">+ invalidate(): void</text>

  <!-- API Layer -->
  
  <!-- BulkAPI Class -->
  <rect x="50" y="1320" width="280" height="200" class="class-box"/>
  <text x="190" y="1340" class="class-title" text-anchor="middle">BulkAPI</text>
  <line x1="50" y1="1350" x2="330" y2="1350" class="section-line"/>
  <text x="60" y="1370" class="attribute">- app: Flask</text>
  <text x="60" y="1385" class="attribute">- checker: FraudChecker</text>
  <text x="60" y="1400" class="attribute">- db_manager: DatabaseManager</text>
  <line x1="50" y1="1410" x2="330" y2="1410" class="section-line"/>
  <text x="60" y="1430" class="method">+ healthCheck(): Response</text>
  <text x="60" y="1445" class="method">+ fraudCheck(): Response</text>
  <text x="60" y="1460" class="method">+ bulkCheck(): Response</text>
  <text x="60" y="1475" class="method">+ getRealStats(): Response</text>
  <text x="60" y="1490" class="method">+ updateRule(): Response</text>

  <!-- AuthAPI Class -->
  <rect x="380" y="1320" width="280" height="200" class="class-box"/>
  <text x="520" y="1340" class="class-title" text-anchor="middle">AuthAPI</text>
  <line x1="380" y1="1350" x2="660" y2="1350" class="section-line"/>
  <text x="390" y="1370" class="attribute">- app: Flask</text>
  <text x="390" y="1385" class="attribute">- db_manager: DatabaseManager</text>
  <text x="390" y="1400" class="attribute">- cache_manager: CacheManager</text>
  <line x1="380" y1="1410" x2="660" y2="1410" class="section-line"/>
  <text x="390" y="1430" class="method">+ register(): Response</text>
  <text x="390" y="1445" class="method">+ login(): Response</text>
  <text x="390" y="1460" class="method">+ validateSession(): Response</text>
  <text x="390" y="1475" class="method">+ getAdminStats(): Response</text>
  <text x="390" y="1490" class="method">+ updateAlgorithmSettings(): Response</text>

  <!-- Frontend Components -->
  
  <!-- LoginForm Class -->
  <rect x="50" y="1620" width="280" height="140" class="class-box"/>
  <text x="190" y="1640" class="class-title" text-anchor="middle">LoginForm</text>
  <line x1="50" y1="1650" x2="330" y2="1650" class="section-line"/>
  <text x="60" y="1670" class="attribute">- form: HTMLFormElement</text>
  <text x="60" y="1685" class="attribute">- validation: Dict</text>
  <line x1="50" y1="1695" x2="330" y2="1695" class="section-line"/>
  <text x="60" y="1715" class="method">+ handleSubmit(): void</text>
  <text x="60" y="1730" class="method">+ validateField(): Boolean</text>
  <text x="60" y="1745" class="method">+ attemptLogin(): LoginResult</text>

  <!-- RegistrationForm Class -->
  <rect x="380" y="1620" width="280" height="140" class="class-box"/>
  <text x="520" y="1640" class="class-title" text-anchor="middle">RegistrationForm</text>
  <line x1="380" y1="1650" x2="660" y2="1650" class="section-line"/>
  <text x="390" y="1670" class="attribute">- form: HTMLFormElement</text>
  <text x="390" y="1685" class="attribute">- passwordRequirements: Dict</text>
  <line x1="380" y1="1695" x2="660" y2="1695" class="section-line"/>
  <text x="390" y="1715" class="method">+ validateEmail(): Boolean</text>
  <text x="390" y="1730" class="method">+ calculatePasswordStrength(): Integer</text>
  <text x="390" y="1745" class="method">+ displayApiKey(): void</text>

  <!-- UserManagement Class -->
  <rect x="710" y="1620" width="280" height="140" class="class-box"/>
  <text x="850" y="1640" class="class-title" text-anchor="middle">UserManagement</text>
  <line x1="710" y1="1650" x2="990" y2="1650" class="section-line"/>
  <text x="720" y="1670" class="attribute">- users: List&lt;User&gt;</text>
  <text x="720" y="1685" class="attribute">- currentUser: User</text>
  <text x="720" y="1700" class="attribute">- pagination: Object</text>
  <line x1="710" y1="1695" x2="990" y2="1695" class="section-line"/>
  <text x="720" y="1715" class="method">+ renderUsers(): void</text>
  <text x="720" y="1730" class="method">+ deleteUser(): void</text>
  <text x="720" y="1745" class="method">+ setupEventListeners(): void</text>

  <!-- RuleManager Class -->
  <rect x="1040" y="1620" width="280" height="140" class="class-box"/>
  <text x="1180" y="1640" class="class-title" text-anchor="middle">RuleManager</text>
  <line x1="1040" y1="1650" x2="1320" y2="1650" class="section-line"/>
  <text x="1050" y="1670" class="attribute">- rules: List&lt;Rule&gt;</text>
  <text x="1050" y="1685" class="attribute">- modifiedRules: Set</text>
  <line x1="1040" y1="1695" x2="1320" y2="1695" class="section-line"/>
  <text x="1050" y="1715" class="method">+ createCategorySection(): void</text>
  <text x="1050" y="1730" class="method">+ updateSaveButton(): void</text>
  <text x="1050" y="1745" class="method">+ saveRules(): void</text>

  <!-- ApiCallManager Class -->
  <rect x="1330" y="1620" width="250" height="160" class="class-box"/>
  <text x="1455" y="1640" class="class-title" text-anchor="middle">ApiCallManager</text>
  <line x1="1330" y1="1650" x2="1580" y2="1650" class="section-line"/>
  <text x="1340" y="1670" class="attribute">- pendingRequests: Map</text>
  <text x="1340" y="1685" class="attribute">- lastCallTime: Map</text>
  <text x="1340" y="1700" class="attribute">- MIN_CALL_INTERVAL: Object</text>
  <line x1="1330" y1="1710" x2="1580" y2="1710" class="section-line"/>
  <text x="1340" y="1730" class="method">+ makeRequest(): Promise</text>

  <!-- Relationships -->
  
  <!-- AuthManager uses DatabaseManager -->
  <line x1="530" y1="230" x2="1170" y2="230" class="relationship"/>
  <line x1="1170" y1="230" x2="1170" y2="240" class="relationship"/>
  <polygon points="1170,240 1165,230 1175,230" class="arrow"/>
  
  <!-- AuthManager creates Sessions -->
  <line x1="680" y1="140" x2="730" y2="140" class="relationship"/>
  <polygon points="730,140 720,135 720,145" class="arrow"/>
  
  <!-- FraudChecker implements AdvancedAlgorithms -->
  <line x1="400" y1="570" x2="450" y2="570" class="inheritance"/>
  <polygon points="450,570 440,565 440,575" class="arrow"/>
  
  <!-- FraudChecker produces FraudResult -->
  <line x1="400" y1="580" x2="820" y2="580" class="relationship"/>
  <polygon points="820,580 810,575 810,585" class="arrow"/>
  
  <!-- FraudChecker uses Rules -->
  <line x1="400" y1="590" x2="1150" y2="590" class="relationship"/>
  <polygon points="1150,590 1140,585 1140,595" class="arrow"/>
  
  <!-- FraudChecker uses SyncMetricsTracker -->
  <line x1="380" y1="700" x2="380" y2="900" class="composition"/>
  <line x1="380" y1="900" x2="520" y2="900" class="composition"/>
  <line x1="520" y1="900" x2="520" y2="970" class="composition"/>
  <polygon points="520,970 515,960 525,960" class="arrow"/>
  
  <!-- BulkAPI uses FraudChecker -->
  <line x1="190" y1="1320" x2="190" y2="710" class="composition"/>
  <polygon points="190,710 185,720 195,720" class="arrow"/>
  
  <!-- AuthAPI uses DatabaseManager -->
  <line x1="520" y1="1320" x2="520" y2="290" class="composition"/>
  <line x1="520" y1="290" x2="1170" y2="290" class="composition"/>
  <line x1="1170" y1="290" x2="1170" y2="230" class="composition"/>
  
  <!-- AuthAPI uses CacheManager -->
  <line x1="640" y1="1400" x2="850" y2="1400" class="composition"/>
  <line x1="850" y1="1400" x2="850" y2="1130" class="composition"/>
  <polygon points="850,1130 845,1140 855,1140" class="arrow"/>

  <!-- DatabaseManager uses MongoManager -->
  <line x1="1310" y1="140" x2="1325" y2="140" class="inheritance"/>
  <line x1="1325" y1="140" x2="1325" y2="1010" class="inheritance"/>
  <line x1="1325" y1="1010" x2="330" y2="1010" class="inheritance"/>
  <polygon points="330,1010 340,1005 340,1015" class="arrow"/>
</svg>